1)browse and capture request using bp
2)go to tar tab seach .js with inscope only 
3)if the .js file present in html as dynamic then use gap to find all js urls from .html files 
  otherwise directly turn on jslinkfinder and run passive scan will give all other jsurls from jslinfider.
4)find which subdomain or url contains all endpoints that related to tar websites.  use this https://www.netify.ai/resources/domains/target.com to find easypeasy
5)then waybacurls & other to collect all possible urls
6)run all new js to bp and find new endpoints using gap & jslinkfinder
7)monitor those js urls using jsmon


remove unwanted js
grep -v -i -E '(jquery|bootstrap|react|googleapis|cloudflare|gtm|analytics|facebook|twitter|fontawesome|jquery|bootstrap|react|vue|angular|moment|lodash|jquery|bootstrap|popper|lodash|moment|axios|react|vue|angular|zone|firebase|chart|d3|fontawesome|polyfill|runtime|vendors|vendor|common|app|manifest|inline|service-worker|gtag|analytics|googletagmanager|google-analytics|googlesyndication|hotjar|sentry|unpkg)' js.txt > filteredjs.txt



remove domain
cat burp_slash_something.txt | awk '{gsub("https://example.com", "")}1' > endpointss.txt

match burp endpoint with jslinkfinders
# Print matched endpoints (present in both files)
grep -Fxf file1.txt file2.txt

# Print endpoints in file1.txt that are NOT in file2.txt
grep -Fvxf burpappendpoint.txt jslinkfinderendpoint.txt

dont fuzz endpoint instead openmultipleurls
