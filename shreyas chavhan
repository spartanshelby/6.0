https://shreyaschavhan.notion.site/I-studied-170-hrs-of-top-hacker-interviews-to-understand-what-I-was-doing-wrong-Here-s-what-I-lear-225a53e4311980fe9d09e7df5a522fec
I studied 170+ hrs of top hacker interviews to understand what I was doing wrong. Here’s what I learnt and what I’m planning to do about it:

1)I hunt of bugs to achieve impact, they hunt for impact to find bugs:
What I need to do is, I need to start hunting for impact and treat bugs as tools to reach that impact — always keeping that end goal in mind while hunting. This will give me an aim, making the process fun and fulfilling. The only difference here is the mindset. I may stumble upon the same things I used to stumble upon, but I’ll look at them with different perspective — which will make that process more fun What I need to do is, I need to start hunting for impact and treat bugs as tools to reach that impact — always keeping that end goal in mind while hunting. This will give me an aim, making the process fun and fulfilling. The only difference here is the mindset. I may stumble upon the same things I used to stumble upon, but I’ll look at them with different perspective — which will make that process more fun

2)I try to find places, areas, features or endpoints where the developer might have forgot to put restrictions/protections i.e. the restriction/protection is non-existent. They find places where protections exists and they try to bypass those protections.
If you target a well defended area — you’ll either break those defenses or learn how those defenses work. Both of which are helpful & valuable things in the long run. Bypassing a high value defense leads to high value finding that the company cares about. Learning about those defenses and understanding those defenses in-depth develops that spidey sense that’ll shorten the time understanding the next time you’ll come across such feature as well as find bugs. And this will also make the process of hunting more fun, coz figuring things out by googling & researching is a fun process in itself. 

3)I focused way too much on structure and forcing myself for an outcome or input in terms of efforts that I forgot to make the process of hunting fun:
i used to define a daily/weekly goal of putting in X amount of hours. Then a goal of testing Y amount of endpoints per day. Which inherently are not bad — but it lacks that emotional touch (i.e. enjoying the process). While these are good outcomes to aim at, I basically made myself feel bad when I used to not put in that much time, and whenever I spent time, I tried to optimize my efforts in such a way that’ll get me quick output —avoiding the “fun” aspect of doing bug bounties altogether. I choose bug bounties as my career coz I loved understanding things, spending time breaking things, researching complex topics and feeling that “ahhhaaa” moment whenever I used to understand what’s happening behind the scenes
so, I’ll try to approach bug bounties in a way such that I enjoy every single minute of time spent hunting. Picking up complex features and trying to break the logic down of that feature on paper and then finding a way to create impact will be my focus. I love simplifying and understanding complex things, this is going to be my primary focus area. 

4)I try to postpone testing complex areas of the application as much as I possibly can, conversely top hackers actively seek areas that are complex to understand and get into
We should understand that if something looks intimidating or difficult, that exactly might be the reason why spending time there is most valuable. If you hunt for bugs where everyone is looking at, you’ll find bugs everyone is finding. If you find it intimidating, there is a likelihood that the person who built that functionality also thought of it as complicated, there’s a likelihood that the other hunters who were hunting on the same target skipped that feature coz they found it complicated too. I’m planning to actively seek out the most challenging parts of the application first, as they are more fun as well as might lead to valuable learning if not valuable bounties. 

5)I look for bugs that everyone else is looking for, top hackers look for bugs that rarely anybody is looking for
I’m planning to shift my focus from common bugs such as IDOR, XSS, etc. to technically complex bugs by deeply understanding each feature and attacking those features with a mindset & bugs that’ll lead to the best possible impact.
by reduce duplicates

6)I try to find whatever I can, top hackers aim for P1/P2 impact while considering low impact bugs as gadgets, than bugs.
I’m planning to shift my priority from finding bugs quick to finding cool bugs. I’ll significantly increase the amount of time I’m learning, reading a lot of bug reports and writeups that talk about these high impact chains, so that I could understand how exactly to approach them. I’ll approach the application with impact first mindset — prioritizing P1/P2 vulns.  I’ll get paid faster, more and will be able to enjoy the journey.

7)I try to be a “jack of all trades”, they specialize and become master of one.
They become an expert, either on a specific application, a specific area of technology or both. Most of the top hackers in the field have unique competitive advantage. Almost every single person I have studied are master of one thing — a few are masters in source code review, some are masters in chrome exploits, some are masters in automation, some are masters in recon, some are so familiar with their target that nobody else understand that target better than them, etc.
I’m planning to pick a niche. familiar with target that nobody else understand  target better than me

8)I waste a lot of time testing the same thing and I move very slowly, top hackers care about the speed too.
Top hackers abandon unproductive paths and endpoints relatively quickly after initial checks. They timebox their efforts, dedicating a deadline to their deep dives to avoid getting stuck endlessly to something that might yield any results. If they end up exhausting that dedicated timebox without any significant progress, they then to note that thing down in as much detail as they require to restart their progress if something clicks later, and they move on to something else. 
What I’m planning to do is — I’ll spend max 10 min per endpoint and if I see it not leading to anything productive but if I feel it might be weird, I’ll note it down and come back to it later. And for more specific deep dives, I’m planning to limit them to 3-7 days max; if that won’t lead to any bugs I’ll note that down and move on to something that’ll get me results.  I’ll come back to my notes only when I’m either done with the target, or got any new idea/lead that makes use of that deep dive concept as a gadget.

9)I learn by reading, they learn by recreating/reproducing.
top hackers-They don’t just read write-ups; they actively reproduce vulnerabilities in labs or test environments to truly grasp the concepts and the why behind the exploits. Almost all top hackers recommend building practical skills by practicing in labs or playing CTF competitions. 

10)I test everything, they prioritize testing areas/features/domains that least likely have been tested before
If you are hunting on targets where the crowd is more, what makes you unique is what feature or area you are choosing to test. The least explored path, the most complex areas, the more deep you go — the more competitive advantage you have. That’s what I’m planning to do from now on. I’ll try prioritizing areas/features/domains that least likely have been tested thoroughly either because of the complexity or the depth/corners you have to go to reach that feature. 

11)I avoid jumping straight onto new research, top hackers are actively and constantly seeking out new information/knowledge
I’m planning to make it a habit to constantly consume writeups and security content in my spare time. 
